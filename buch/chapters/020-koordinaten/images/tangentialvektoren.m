%
% tangentialvektoren.m -- erzeuge zufällige Tangentialvektoren
%
% (c) 2025 Prof Dr Andreas Müller
%
global N;
N = 1000;

rand("seed", 4711);

function retval = rpoint()
	phi = 2 * pi * rand(1,1);
	%theta = (1 - cos(rand(1,1) * pi / 2)) * pi/2;
	theta = acos(1 - rand(1,1));
	retval = [ theta, phi ];
end

function D = drehmatrix(winkel)
	theta = winkel(1);
	phi = winkel(2);
	D = [
		cos(phi), -sin(phi), 0;
		sin(phi),  cos(phi), 0;
		       0,         0, 1
	] * [
		 cos(theta), 0, sin(theta);
		          0, 1,           0;
		-sin(theta), 0, cos(theta)
	]
end

function punkt(fn, winkel)
	fprintf(fn, "sphere { kugel(%.4f, %.4f), arrowradius }\n",
		winkel(1), winkel(2));
end

function zeichne(fn, winkel)
	D = drehmatrix(winkel);
	t = rand(1,1) * 2 * pi;
	v = D * [ cos(t); sin(t); 0 ];
	fprintf(fn, "pfeil(kugel(%.4f, %.4f), ", winkel(1), winkel(2));
	fprintf(fn, "<%.4f, %.4f, %.4f>)\n", v(1), v(3), v(2));
end

fn = fopen("tangentialvektoren.inc", "w");

fprintf(fn, "//\n");
fprintf(fn, "// tangentialvektoren.inc -- don't modify, generated by tangentialvektoren.m\n");
fprintf(fn, "//\n");
fprintf(fn, "// (c) 2025 Prof Dr Andreas Müller\n");
fprintf(fn, "//\n");
fprintf(fn, "#macro pfeile()\n");

for i = (1:N)
	winkel = rpoint();
	zeichne(fn, winkel);
end

fprintf(fn, "#end\n");

fclose(fn);
